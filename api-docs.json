{
  "swagger": "2.0",
  "info": {
    "description": "Authorization Service API Documentation",
    "version": "2.0",
    "title": "Authorization Service API"
  },
  "host": "usalvwsunmaster.infor.com:29090",
  "basePath": "/authorizationserver",
  "tags": [
    {
      "name": "Discovery Service",
      "description": "List of operations supported by Discovery Service"
    },
    {
      "name": "Authorization Service",
      "description": "List of operations supported by Authorization Service"
    }
  ],
  "paths": {
    "/as/v1/.well-known/openid-configuration": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Fetch well known endpoint",
        "operationId": "fetchWellKnownEndPointsUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "string" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/admin/clients": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Get OAuth Clients",
        "operationId": "getClientsUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientType",
            "in": "query",
            "description": "clientType",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn",
            "in": "query",
            "description": "createdOn",
            "required": false,
            "type": "string"
          },
          {
            "name": "beforeLastIssuedTokenTime",
            "in": "query",
            "description": "beforeLastIssuedTokenTime",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/OAuth2ClientResponse" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/admin/clients/deleteclient/{client_id}": {
      "post": {
        "tags": [ "Authorization Service" ],
        "summary": "Delete OAuth Client",
        "operationId": "deleteClientUsingPOST",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/admin/clients/{client_id}": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Get OAuth Client by client id",
        "operationId": "getClientByIdUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/ClientApplicationResponse" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/cleanup": {
      "post": {
        "tags": [ "Authorization Service" ],
        "summary": "Clean up expired otp,clients and jwk keys",
        "operationId": "cleanupUsingPOST",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/clients/{client_type}": {
      "post": {
        "tags": [ "Authorization Service" ],
        "summary": "Register client",
        "operationId": "registerClientUsingPOST",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "client_type",
            "in": "path",
            "description": "client_type",
            "required": true,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/OAuth2ClientResponse" }
          },
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/clients/{servicetype}": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Get all the clients for the given service type",
        "operationId": "getClientsOfServiceTypeUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "servicetype",
            "in": "path",
            "description": "servicetype",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn",
            "in": "query",
            "description": "createdOn",
            "required": false,
            "type": "string"
          },
          {
            "name": "beforeLastIssuedTokenTime",
            "in": "query",
            "description": "beforeLastIssuedTokenTime",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/OAuth2ClientResponse" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/clients/{servicetype}/deleteclient/{client_id}": {
      "post": {
        "tags": [ "Authorization Service" ],
        "summary": "Delete OAuth Client for the given service type",
        "operationId": "deleteClientByServiceTypeAndClientIdUsingPOST",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "servicetype",
            "in": "path",
            "description": "servicetype",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "path",
            "description": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/clients/{servicetype}/{client_id}": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Get OAuth Client by client id and service type",
        "operationId": "getClientByIdAndServiceTypeUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "servicetype",
            "in": "path",
            "description": "servicetype",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "path",
            "description": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/ClientApplicationResponse" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": [ "Authorization Service" ],
        "summary": "http delete to delete client for the given service type and client id",
        "operationId": "httpDeleteClientByServiceTypeAndClientIdUsingDELETE",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "servicetype",
            "in": "path",
            "description": "servicetype",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "path",
            "description": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "204": { "description": "No Content" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/api/rotatejwk": {
      "post": {
        "tags": [ "Authorization Service" ],
        "summary": "Rotate jwk",
        "operationId": "rotatejwkUsingPOST",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/exchangeotp": {
      "post": {
        "tags": [ "Authorization Service" ],
        "summary": "Exchange otp",
        "operationId": "exchangeOTPUsingPOST",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "oauthClient",
            "description": "OAuthClient information",
            "required": true,
            "schema": { "$ref": "#/definitions/OAuthClient" }
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/OAuth2ClientResponse" }
          },
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/info": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Information about the service",
        "operationId": "infoUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/AppInfoResponse" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/jwk": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Fetch all active public keys",
        "operationId": "fetchJWKSUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "string" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/statuspage": {
      "get": {
        "tags": [ "Authorization Service" ],
        "summary": "Status Info of the service",
        "operationId": "statusPageUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "*/*" ],
        "responses": {
          "200": { "description": "Success" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/as/v1/token": {
      "post": {
        "tags": [ "Authorization Service" ],
        "summary": "Get new access token",
        "operationId": "generateAccessTokenUsingPOST",
        "consumes": [ "application/x-www-form-urlencoded" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "client_id",
            "in": "formData",
            "description": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_secret",
            "in": "formData",
            "description": "client_secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "grant_type",
            "in": "formData",
            "description": "grant_type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "formData",
            "description": "scope",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/OAuth2TokenResponse" }
          },
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/ds/v1/api/services/{servicetype}": {
      "get": {
        "tags": [ "Discovery Service" ],
        "summary": "Get the service by service type",
        "operationId": "getServiceInstanceByTypeUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "servicetype",
            "in": "path",
            "description": "servicetype",
            "required": true,
            "type": "string"
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/ServiceDiscoveryResponse" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "post": {
        "tags": [ "Discovery Service" ],
        "summary": "Registers the service based on the service type passed.",
        "operationId": "registerServiceUsingPOST",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "servicetype",
            "in": "path",
            "description": "servicetype",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "serviceInstance",
            "description": "Service Information",
            "required": true,
            "schema": { "$ref": "#/definitions/ServiceInstance" }
          },
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/ServiceDiscoveryResponse" }
          },
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/ds/v1/endpoints": {
      "get": {
        "tags": [ "Discovery Service" ],
        "summary": "Get all the service which the discovery service is aware of",
        "operationId": "getAllServiceInstancesUsingGET",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "IAM_UNIQUE_ID",
            "in": "header",
            "description": "IAM_UNIQUE_ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": { "$ref": "#/definitions/ServiceDiscoveryResponse" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/ds/v1/info": {
      "get": {
        "tags": [ "Discovery Service" ],
        "summary": "Information about the service",
        "operationId": "infoUsingGET_1",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/AppInfoResponse" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    }
  },
  "definitions": {
    "OAuth2TokenResponse": {
      "type": "object",
      "properties": {
        "access_token": { "type": "string" },
        "expires_in": {
          "type": "integer",
          "format": "int64"
        },
        "token_type": { "type": "string" }
      }
    },
    "OAuthClient": {
      "type": "object",
      "properties": {
        "clientType": { "type": "string" },
        "client_id": { "type": "string" },
        "otp": { "type": "string" }
      }
    },
    "OAuth2ClientResponse": {
      "type": "object",
      "properties": {
        "client_id": { "type": "string" },
        "client_secret": { "type": "string" },
        "noOfPages": { "type": "string" },
        "noOfRecords": { "type": "string" },
        "otp": { "type": "string" },
        "results": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClientApplicationResponse" }
        },
        "totalRecords": { "type": "string" }
      }
    },
    "ServiceInstance": {
      "type": "object",
      "properties": { "url": { "type": "string" } }
    },
    "ClientApplicationResponse": {
      "type": "object",
      "properties": {
        "clientId": { "type": "string" },
        "clientType": { "type": "string" },
        "createdBy": { "type": "string" },
        "createdOn": { "type": "string" },
        "failedAttemptCount": {
          "type": "integer",
          "format": "int32"
        },
        "lastFailedAttempt": { "type": "string" },
        "lastSuccessAttempt": { "type": "string" },
        "updatedBy": { "type": "string" }
      }
    },
    "Map«string,ServiceDiscoveryResponse»": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/ServiceDiscoveryResponse" }
    },
    "ServiceDiscoveryResponse": {
      "type": "object",
      "properties": {
        "serviceId": { "type": "string" },
        "url": { "type": "string" }
      }
    },
    "AppInfoResponse": {
      "type": "object",
      "properties": {
        "applicationName": { "type": "string" },
        "buildDate": { "type": "string" },
        "buildNumber": { "type": "string" },
        "versionNumber": { "type": "string" }
      }
    }
  }
}